Algoritmul lui Peterson ofera garantia de fairness in cazul in care avem 2 thread-uri deoarece un thread o ia inainte in timp ce celalalt asteapta ca thread-ul care a luat-o inainte sa treaca prin toate celelalte n-1 nivele, dupa ce acesta a ajuns la sectiunea critica i se da unlock, timp in care thread-ul care astepta o va lua inainte de data asta pana cand acceseaza sectiunea critica, si tot asa fiecare acceseaza sectiunea critica unul cate unu. Dar in cazul in care avem mai mult de 2 thread-uri din nou unul o va lua inainte pana ajunge la sectiunea critica, dar odata ce acesta a trecut prin toate nivelele si isi ia unlock nu stim care din celelalte n-1 thread-uri o va lua inainte pentru a ajunge la sectiunea critica, astfel dupa ce al doilea thread care ajunge la sectiunea critica isi ia unlock, este posibil ca al treilea thread care o ia inainte sa fie chiar acel thread care a luat-o prima oara inainte, deci este posibil ca un thread sa acceseze sectiunea critica de mai multe ori eliminand astfel garantia de fairness.
O varianta de imbunatatire pentru a asigura ca algoritmul este echilibrat ar fi sa adaugam un tablou contor care retine pentru fiecare thread de cate ori a accesat sectiunea critica, iar in interiorul buclei for adaugam o conditie in care verificam daca sunt alte thread-uri care au contorul mai mic decat cel curent, daca conditia este adevarata atunci setam level[i]=0, facand thread-ul curent sa astepte.